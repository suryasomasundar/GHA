name: Android Appium Tests (Fully Robust)

on:
  push:
    branches: [master]
  pull_request:

jobs:
  android-test:
    runs-on: macos-13
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK Tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -O https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip
          unzip -q commandlinetools-mac-*.zip
          mv cmdline-tools latest
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/emulator" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

      - name: Install SDK + Build Tools + Create Emulator
        run: |
          yes | sdkmanager --licenses
          sdkmanager \
            "platform-tools" \
            "build-tools;30.0.3" \
            "platforms;android-30" \
            "emulator" \
            "system-images;android-30;google_apis;x86"
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" --device "pixel"

      - name: Boot Emulator
        run: |
          $HOME/android-sdk/emulator/emulator \
            -avd test \
            -no-window \
            -no-audio \
            -no-boot-anim \
            -gpu swiftshader_indirect \
            -port 5554 \
            -no-metrics &

          echo "Waiting for emulator device..."
          adb wait-for-device

      - name: Wait for Emulator Full Readiness (boot + package)
        run: |
          echo "Waiting for boot_completed..."
          boot_completed=""
          timeout=0
          max_wait=300
          while [ "$boot_completed" != "1" ] && [ $timeout -lt $max_wait ]; do
            boot_completed=$(adb shell getprop sys.boot_completed | tr -d '\r')
            echo "Boot status: $boot_completed"
            sleep 5
            timeout=$((timeout + 5))
          done

          echo "Unlocking screen..."
          adb shell input keyevent 82

          echo "Waiting for 'package' service..."
          svc_timeout=0
          while ! adb shell service check package | grep -q "found"; do
            echo "⏳ Waiting for package manager..."
            sleep 5
            svc_timeout=$((svc_timeout + 5))
            if [ $svc_timeout -ge 120 ]; then
              echo "❌ Timeout: 'package' service not available."
              exit 1
            fi
          done

          echo "✅ Emulator fully ready. Proceeding."

      - name: Install Appium + UiAutomator2 Driver
        run: |
          npm install -g appium
          appium driver install uiautomator2
          appium -v

      - name: List Installed Appium Drivers (Debug)
        run: appium driver list --installed

      - name: Start Appium Server
        run: nohup appium > appium-android.log 2>&1 &

      - name: Wait for Appium Server
        run: |
          for i in {1..20}; do
            nc -z localhost 4723 && echo "✅ Appium is ready" && break
            echo "⏳ Waiting for Appium to be ready..."
            sleep 5
          done

      - name: Run Appium Cucumber Tests with Retry
        run: |
          cd TestAppiumDemo
          n=0
          until [ "$n" -ge 2 ]
          do
            mvn test && break
            n=$((n+1))
            echo "❌ Test failed. Retrying in 10s..."
            sleep 10
          done

      - name: Upload Appium Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-android-logs
          path: appium-android.log
