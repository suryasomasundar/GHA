name: Run Vanilla TestNG Tests

on:
  push:
    branches:
      - master  # Trigger workflow on push to the master branch
  pull_request:
    branches:
      - master  # Trigger workflow on pull request to the master branch

jobs:
  test:
    runs-on: macos-latest  # macOS runner for running tests on Android/iOS devices

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'  # Use the Java version that works with your project
          distribution: 'temurin'  # Use Eclipse Temurin distribution for JDK

      - name: Install Dependencies
        run: |
          # Install necessary dependencies (like Appium, drivers)
          npm install -g appium
          appium driver install uiautomator2  # For Android
          appium driver install xcuitest  # For iOS
          # You might want to install dependencies using Maven/Gradle if needed for TestNG

      - name: Install Android SDK
        run: |
          # Install Android SDK tools
          curl -s https://dl.google.com/android/repository/commandlinetools-mac-8512546_latest.zip -o sdk-tools.zip
          unzip sdk-tools.zip -d /usr/local/share/android-sdk
          rm sdk-tools.zip
          
          # Set environment variables for Android SDK
          export ANDROID_HOME=/usr/local/share/android-sdk
          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/emulator

          # Accept Android licenses and install required packages
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-29" "system-images;android-29;google_apis;x86_64"

      - name: Set up Android Emulator
        run: |
          # Create Android Emulator
          echo no | avdmanager create avd -n test -k "system-images;android-29;google_apis;x86_64" --force
          
          # Start the emulator
          nohup emulator -avd test -no-window -gpu off & 
          sleep 60  # Wait for the emulator to start

      - name: Set up Appium server
        run: |
          appium &  # Start Appium server
          while ! nc -z localhost 4723; do sleep 1; done  # Wait for Appium server to be ready

      - name: Run TestNG Tests (Android)
        run: |
          # Run the Android tests
          mvn clean test -DsuiteXmlFile=android-testng.xml  # Use your TestNG suite file for Android tests

      - name: Run TestNG Tests (iOS)
        run: |
          # Run the iOS tests
          mvn clean test -DsuiteXmlFile=ios-testng.xml  # Use your TestNG suite file for iOS tests
