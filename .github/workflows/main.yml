name: Parallel Appium Tests (Android + iOS)

on:
  push:
    branches: [master]
  pull_request:

jobs:
  android-test:
    name: Android Test
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Accept Android Licenses
        run: yes | sdkmanager --licenses

      - name: Install Android System Image
        run: sdkmanager "system-images;android-34;google_apis;x86_64"

      - name: Create and Boot Emulator
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-34;google_apis;x86_64" --device "pixel_5" --force
          $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader_indirect -port 5554 &
          echo "Waiting for emulator to boot..."
          adb wait-for-device
          boot_completed=""
          timeout=0
          while [ "$boot_completed" != "1" ] && [ $timeout -lt 60 ]; do
            boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            echo "Boot status: $boot_completed"
            sleep 5
            timeout=$((timeout + 5))
          done
          if [ "$boot_completed" != "1" ]; then
            echo "Emulator failed to boot"
            exit 1
          fi

      - name: Install Appium
        run: |
          npm install -g appium
          appium -v

      - name: Start Appium Server
        run: |
          nohup appium > appium-android.log 2>&1 &

      - name: Wait for Appium
        run: |
          for i in {1..20}; do
            nc -z localhost 4723 && echo "Appium is ready" && break
            echo "Waiting for Appium..."
            sleep 5
          done

      - name: Run Android Tests
        run: mvn test

      - name: Upload Appium Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-android-logs
          path: appium-android.log

  ios-test:
    name: iOS Test
    runs-on: macos-13
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Boot iOS Simulator (iPhone 14 - iOS 17.4)
        run: |
          xcrun simctl delete unavailable || true
          xcrun simctl shutdown all || true

          DEVICE_NAME="iPhone 14"
          RUNTIME="iOS 17.4"

          DEVICE_ID=$(xcrun simctl create "TestDevice" "com.apple.CoreSimulator.SimDeviceType.$DEVICE_NAME" "com.apple.CoreSimulator.SimRuntime.$RUNTIME")
          xcrun simctl boot "$DEVICE_ID"

          until xcrun simctl bootstatus "$DEVICE_ID" | grep -q "Booted"; do
            echo "Waiting for iOS Simulator to boot..."
            sleep 5
          done

      - name: Install Appium
        run: |
          npm install -g appium
          appium -v

      - name: Start Appium Server
        run: |
          nohup appium > appium-ios.log 2>&1 &

      - name: Wait for Appium
        run: |
          for i in {1..20}; do
            nc -z localhost 4723 && echo "Appium is ready" && break
            echo "Waiting for Appium..."
            sleep 5
          done

      - name: Run iOS Tests
        run: mvn test

      - name: Upload Appium Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-ios-logs
          path: appium-ios.log
