name: Android Appium Tests (Fast Boot - Android 30)

on:
  push:
    branches: [master]
  pull_request:

jobs:
  android-test:
    name: Android Test
    runs-on: macos-13
    timeout-minutes: 35

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android Command Line Tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          cd $HOME/android-sdk/cmdline-tools
          curl -O https://dl.google.com/android/repository/commandlinetools-mac-9477386_latest.zip
          unzip -q commandlinetools-mac-*.zip
          mv cmdline-tools latest
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$HOME/android-sdk/emulator" >> $GITHUB_PATH
          echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

      - name: Install Android SDK Packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-30" "emulator" "system-images;android-30;default;x86"

      - name: Create and Boot Android Emulator (API 30 - x86)
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;default;x86" --device "pixel" --force

          $HOME/android-sdk/emulator/emulator \
            -avd test \
            -no-snapshot \
            -no-window \
            -no-audio \
            -no-boot-anim \
            -gpu swiftshader_indirect \
            -port 5554 \
            -no-metrics &

          echo "Waiting for emulator to boot..."
          $HOME/android-sdk/platform-tools/adb wait-for-device

          boot_completed=""
          timeout=0
          max_wait=180

          while [ "$boot_completed" != "1" ] && [ $timeout -lt $max_wait ]; do
            boot_completed=$($HOME/android-sdk/platform-tools/adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            if [ "$boot_completed" == "1" ]; then
              echo "✅ Emulator is booted!"
              break
            fi

            wakefulness=$($HOME/android-sdk/platform-tools/adb shell dumpsys power | grep 'mWakefulness=' || true)
            echo "Boot status: $boot_completed | Wakefulness: $wakefulness"

            sleep 5
            timeout=$((timeout + 5))
          done

          if [ "$boot_completed" != "1" ]; then
            echo "❌ Emulator failed to boot. Dumping emulator state..."
            $HOME/android-sdk/platform-tools/adb devices
            $HOME/android-sdk/platform-tools/adb shell getprop
            $HOME/android-sdk/platform-tools/adb shell logcat -d | tail -n 100
            exit 1
          fi

      - name: Install Appium
        run: |
          npm install -g appium
          appium -v

      - name: Start Appium Server
        run: |
          nohup appium > appium-android.log 2>&1 &

      - name: Wait for Appium
        run: |
          for i in {1..20}; do
            nc -z localhost 4723 && echo "✅ Appium is ready" && break
            echo "⏳ Waiting for Appium..."
            sleep 5
          done

      - name: Run Android Tests
        run: mvn test

      - name: Upload Appium Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: appium-android-logs
          path: appium-android.log
